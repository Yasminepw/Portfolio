{"ast":null,"code":"import React from\"react\";import{ReactP5Wrapper}from\"react-p5-wrapper\";import\"../styles/FractalTree.css\";var angle;var Sketch=function Sketch(p5){p5.setup=function(){p5.createCanvas(400,400,\"transparent\");angle=p5.PI/4;p5.stroke(255);};p5.draw=function(){p5.clear();p5.translate(200,p5.height);angle=p5.map(p5.sin(p5.frameCount*0.01),-1,1,p5.PI/2,p5.PI/16);// vary the angle using sin()\nbranch(100);};function branch(len){p5.line(0,0,0,-len);p5.translate(0,-len);if(len>4){p5.push();p5.rotate(angle);branch(len*0.67);p5.pop();p5.push();p5.rotate(-angle);branch(len*0.67);p5.pop();}}};var FractalTree=function FractalTree(){return/*#__PURE__*/React.createElement(\"div\",{id:\"fractal-tree\"},/*#__PURE__*/React.createElement(ReactP5Wrapper,{sketch:Sketch}));};export default FractalTree;","map":{"version":3,"sources":["/Users/businessprojects/Documents/GitHub/Portfolio/src/components/FractalTree.js"],"names":["React","ReactP5Wrapper","angle","Sketch","p5","setup","createCanvas","PI","stroke","draw","clear","translate","height","map","sin","frameCount","branch","len","line","push","rotate","pop","FractalTree"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,kBAA/B,CACA,MAAO,2BAAP,CAEA,GAAIC,CAAAA,KAAJ,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,EAAE,CAAI,CACnBA,EAAE,CAACC,KAAH,CAAW,UAAM,CACfD,EAAE,CAACE,YAAH,CAAgB,GAAhB,CAAqB,GAArB,CAA0B,aAA1B,EACAJ,KAAK,CAAGE,EAAE,CAACG,EAAH,CAAQ,CAAhB,CACAH,EAAE,CAACI,MAAH,CAAU,GAAV,EACD,CAJD,CAMAJ,EAAE,CAACK,IAAH,CAAU,UAAM,CACdL,EAAE,CAACM,KAAH,GACAN,EAAE,CAACO,SAAH,CAAa,GAAb,CAAkBP,EAAE,CAACQ,MAArB,EACAV,KAAK,CAAGE,EAAE,CAACS,GAAH,CAAOT,EAAE,CAACU,GAAH,CAAOV,EAAE,CAACW,UAAH,CAAgB,IAAvB,CAAP,CAAqC,CAAC,CAAtC,CAAyC,CAAzC,CAA4CX,EAAE,CAACG,EAAH,CAAQ,CAApD,CAAuDH,EAAE,CAACG,EAAH,CAAQ,EAA/D,CAAR,CAA4E;AAC5ES,MAAM,CAAC,GAAD,CAAN,CACD,CALD,CAOA,QAASA,CAAAA,MAAT,CAAgBC,GAAhB,CAAqB,CACnBb,EAAE,CAACc,IAAH,CAAQ,CAAR,CAAW,CAAX,CAAc,CAAd,CAAiB,CAACD,GAAlB,EACAb,EAAE,CAACO,SAAH,CAAa,CAAb,CAAgB,CAACM,GAAjB,EACA,GAAIA,GAAG,CAAG,CAAV,CAAa,CACXb,EAAE,CAACe,IAAH,GACAf,EAAE,CAACgB,MAAH,CAAUlB,KAAV,EACAc,MAAM,CAACC,GAAG,CAAG,IAAP,CAAN,CACAb,EAAE,CAACiB,GAAH,GACAjB,EAAE,CAACe,IAAH,GACAf,EAAE,CAACgB,MAAH,CAAU,CAAClB,KAAX,EACAc,MAAM,CAACC,GAAG,CAAG,IAAP,CAAN,CACAb,EAAE,CAACiB,GAAH,GACD,CACF,CACF,CA5BD,CA8BA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,sBAClB,2BAAK,EAAE,CAAC,cAAR,eACE,oBAAC,cAAD,EAAgB,MAAM,CAAEnB,MAAxB,EADF,CADkB,EAApB,CAMA,cAAemB,CAAAA,WAAf","sourcesContent":["import React from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport \"../styles/FractalTree.css\";\n\nlet angle;\n\nconst Sketch = p5 => {\n  p5.setup = () => {\n    p5.createCanvas(400, 400, \"transparent\");\n    angle = p5.PI / 4;\n    p5.stroke(255);\n  };\n\n  p5.draw = () => {\n    p5.clear();\n    p5.translate(200, p5.height);\n    angle = p5.map(p5.sin(p5.frameCount * 0.01), -1, 1, p5.PI / 2, p5.PI / 16); // vary the angle using sin()\n    branch(100);\n  };\n\n  function branch(len) {\n    p5.line(0, 0, 0, -len);\n    p5.translate(0, -len);\n    if (len > 4) {\n      p5.push();\n      p5.rotate(angle);\n      branch(len * 0.67);\n      p5.pop();\n      p5.push();\n      p5.rotate(-angle);\n      branch(len * 0.67);\n      p5.pop();\n    }\n  }\n};\n\nconst FractalTree = () => (\n  <div id=\"fractal-tree\">\n    <ReactP5Wrapper sketch={Sketch} />\n  </div>\n);\n\nexport default FractalTree;\n"]},"metadata":{},"sourceType":"module"}